{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a cross-account role (assumable by CloudReactor) for running, scheduling, and stopping Tasks and Workflows using ECS and Lambda. It also enables Cloudwatch logging for these Tasks.",
    "Outputs": {
        "CloudreactorRoleARN": {
          "Description": "The ARN of the role that can be assumed by CloudReactor",
          "Value": {
              "Fn::GetAtt": [
                  "executionSchedulingRole",
                  "Arn"
              ]
          }
        },
        "TaskExecutionRoleARN": {
            "Description": "The ARN of the role used for running tasks in ECS and Lambda",
            "Value": {
                "Fn::GetAtt": [
                    "taskExecutionRole",
                    "Arn"
                ]
            }
        },
        "WorkflowStarterARN": {
            "Description": "The ARN of the Lambda used to start Workflows on a schedule",
            "Value": {
                "Fn::GetAtt": [
                    "cloudreactorWorkflowStarterLambda",
                    "Arn"
                ]
            }
        }
    },
    "Parameters": {
        "DeploymentEnvironment": {
            "Description": "The name of the deployment environment, e.g. 'staging' or 'production'. Must consist only of alphanumeric characters.",
            "MinLength": "1",
            "MaxLength": "128",
            "AllowedPattern": "[a-zA-Z0-9]+",
            "NoEcho": "false",
            "Type": "String"
        },
        "LambdaPathPrefix": {
            "Description": "A prefix for Lambda function names that are allowed to be invoked by CloudReactor. This may be used to prevent CloudReactor from invoking sensitive functions.",
            "AllowedPattern": "[a-zA-Z0-9_/+=.@-]*",
            "Default": "",
            "MinLength": "0",
            "MaxLength": "128",
            "NoEcho": "false",
            "Type": "String"
        },
        "ExternalID": {
            "Description": "The External ID that will be required to assume the role.",
            "MinLength": "8",
            "MaxLength": "128",
            "NoEcho": "false",
            "Type": "String"
        },
        "WorkflowStarterAccessKey": {
            "Description": "The access key used to authenticate requests to start Workflows on a schedule.",
            "MinLength": "8",
            "MaxLength": "128",
            "NoEcho": "false",
            "Type": "String"
        },
        "CloudwatchLogGroupPattern": {
            "Description": "A matching string for the names of Cloudwatch Log Groups that Tasks are allowed to write to. It should normally end in '*' so that arbitrary Log Groups can be created, after a prefix.",
            "Default": "*",
            "MinLength": "1",
            "MaxLength": "512",
            "NoEcho": "false",
            "Type": "String"
        },
        "SecretsPathPrefix": {
            "Description": "A prefix for secret name paths in Secrets Manager. Tasks using the default Task Execution Role will have access to secrets with paths beginning with '[SecretsPathPrefix][DeploymentEnvironment]/common/*'.",
            "AllowedPattern": "[a-zA-Z0-9_/+=.@-]*",
            "Default": "CloudReactor/",
            "MinLength": "0",
            "MaxLength": "128",
            "NoEcho": "false",
            "Type": "String"
        }
    },
    "Resources": {
        "executionSchedulingRole": {
            "Properties": {
                "Description": "A role that allows CloudReactor to run, schedule, and stop Tasks in ECS and Lambda",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Condition": {
                                "StringEquals": {
                                    "sts:ExternalId": {
                                        "Ref": "ExternalID"
                                    }
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": "arn:aws:iam::549277324696:role/customer_invoker{{ role_suffix }}"
                            }
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "events.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ecs:CreateService",
                                        "ecs:DeleteService",
                                        "ecs:DescribeServices",
                                        "ecs:DeregisterTaskDefinition",
                                        "ecs:ListClusters",
                                        "ecs:ListServices",
                                        "ecs:ListTaskDefinitions",
                                        "ecs:ListTaskDefinitionFamilies",
                                        "ecs:RunTask",
                                        "ecs:StartTask",
                                        "ecs:StopTask",
                                        "ecs:TagResource",
                                        "ecs:UpdateService",
                                        "ecs:UntagResource",
                                        "events:DeleteRule",
                                        "events:DescribeRule",
                                        "events:DisableRule",
                                        "events:EnableRule",
                                        "events:ListRules",
                                        "events:ListTargetsByRule",
                                        "events:PutEvents",
                                        "events:PutRule",
                                        "events:PutTargets",
                                        "events:RemoveTargets"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": "iam:PassRole",
                                    "Resource": [
                                        "*"
                                    ],
                                    "Condition": {
                                        "StringLike": {
                                            "iam:PassedToService": "ecs-tasks.amazonaws.com"
                                        }
                                    }
                                },
                                                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [

                                                    "arn:aws:lambda:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":function:",
                                                    {
                                                        "Ref": "LambdaPathPrefix"
                                                    },
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName":  {
                            "Fn::Join": [
                                "-",
                                [
                                    "CloudreactorRunTasksPolicy",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "DeploymentEnvironment"
                                    }
                                ]
                            ]
                        }

                    }
                ],
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "DeploymentEnvironment"
                        }
                    },
                    {
                        "Key": "ManagedBy",
                        "Value": "CloudReactor"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "taskExecutionRole": {
            "Properties": {
                "Description": "A role used for running tasks in ECS and Lambda, assumed by the executionSchedulingRole",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::GetAtt": [
                                        "executionSchedulingRole",
                                        "Arn"
                                    ]
                                }
                            }
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "apigateway.amazonaws.com",
                                "ecs-tasks.amazonaws.com",
                                "lambda.amazonaws.com",
                                "events.amazonaws.com"
                              ]
                            }

                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                ],
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "logs:DescribeLogStreams"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                ":",
                                                [
                                                    "arn:aws:logs",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    {
                                                        "Ref": "CloudwatchLogGroupPattern"
                                                    }
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "secretsmanager:GetSecretValue"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:secretsmanager:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":secret:",
                                                    {
                                                        "Ref": "SecretsPathPrefix"
                                                    },
                                                    {
                                                        "Ref": "DeploymentEnvironment"
                                                    },
                                                    "/common/*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    "CloudreactorDefaultTaskExecutionPolicy",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "DeploymentEnvironment"
                                    }
                                ]
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "DeploymentEnvironment"
                        }
                    },
                    {
                        "Key": "ManagedBy",
                        "Value": "CloudReactor"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "passRolePolicyUnmanaged": {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyDocument" : {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "iam:PassRole",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "taskExecutionRole",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": "iam:PassRole",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "executionSchedulingRole",
                                    "Arn"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": {
                    "Fn::Join": [
                        "-",
                        [
                            "CloudreactorPassRolePolicy",
                            {
                                "Ref": "AWS::Region"
                            },
                            {
                                "Ref": "DeploymentEnvironment"
                            }
                        ]
                    ]
                },
                "Roles" : [
                    {
                        "Ref": "executionSchedulingRole"
                    }
                ]
            }
        },
        "cloudreactorWorkflowStarterLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "A function that starts Workflows defined in CloudReactor. Use to schedule Workflows triggered by Cloudwatch Events.",
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "taskExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": {{ url_requester_contents }}
                },
                "Runtime": "python3.7",
                "Environment" : {
                   "Variables" : {
                      "URL_REQUESTER_ACCESS_KEY": {
                        "Ref": "WorkflowStarterAccessKey"
                      }
                   }
                },
                "Timeout": 60,
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "DeploymentEnvironment"
                        }
                    },
                    {
                        "Key": "ManagedBy",
                        "Value": "CloudReactor"
                    }
                ]
            }
        },
        "workflowStartLambdaInvokePermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "cloudreactorWorkflowStarterLambda",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com"
            }
        }
    }
}
